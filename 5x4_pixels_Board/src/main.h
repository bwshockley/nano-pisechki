#include <avr/io.h>
#include <avr/pgmspace.h>
#include <util/delay.h>
#include <stdint.h>

#define LED_BIT  	0x1F					//* Working pins
#define DELAY		2						//* Working pins
#define DELAY_OBJ	1000/(20*DELAY)			//* Time to show one element  
											//* 1sec/(Number_of_elements*Delay of switch)

const char led_state[] PROGMEM=		//* State of pins in led matrix when we must pull up
{
	0b00001, 0b00010, 0b00010, 0b00100, 	//* 1,  2,  3,  4
	0b00100, 0b01000, 0b01000, 0b10000, 	//* 5,  6,  7,  8
	0b00001, 0b00100, 0b00001, 0b01000, 	//* 9,  10, 11, 12
	0b00001, 0b10000, 0b00010, 0b01000, 	//* 13, 14, 15, 16
	0b00100, 0b10000, 0b00010, 0b10000, 	//* 17, 18, 19, 20
};

const char led_mask[] PROGMEM =		//* Mask array of pins for output
{
	0b00011, 0b00110, 0b01100, 0b11000, 	//* 1,  2,  3,  4
	0b00101, 0b01001, 0b10001, 0b01010, 	//* 5,  6,  7,  8
	0b10100, 0b10010,  						//* 9,  10
};

static uint8_t _chars[26][3] PROGMEM =
{
	{											//* A
		0b10010110,    							//*   0 1 1 0
		0b10011111,    							//*   1 0 0 1
		0b1001,    	   							//*   1 1 1 1
				   								//*   1 0 0 1
	    		   								//*   1 0 0 1
	},
	{											//* B
		0b10010111,    							//*   1 1 1 0
		0b10010111,    							//*   1 0 0 1
		0b0111,    	   							//*   1 1 1 0
				   								//*   1 0 0 1
	    		   								//*   1 1 1 0
	},
	{											//* C
		0b00011111,    							//*   1 1 1 1
		0b00010001,    							//*   1 0 0 0
		0b1111,    	   							//*   1 0 0 0
				   								//*   1 0 0 0
	    		   								//*   1 1 1 1
	},
	{											//* D
		0b10010111,    							//*   1 1 1 0
		0b10011001,    							//*   1 0 0 1
		0b0111,    	   							//*   1 0 0 1
				   								//*   1 0 0 1
	    		   								//*   1 1 1 0
	},
	{											//* E
		0b00011111,    							//*   1 1 1 1
		0b00011111,    							//*   1 0 0 0
		0b1111,    	   							//*   1 1 1 1
				   								//*   1 0 0 0
	    		   								//*   1 1 1 1
	},
	{											//* F
		0b00011111,    							//*   1 1 1 1
		0b00011111,    							//*   1 0 0 0
		0b0001,    	   							//*   1 1 1 1
				   								//*   1 0 0 0
	    		   								//*   1 0 0 0
	},
	{											//* G
		0b00011111,    							//*   1 1 1 1
		0b10010101,    							//*   1 0 0 0
		0b0111,    	   							//*   1 0 1 0
				   								//*   1 0 0 1
	    		   								//*   1 1 1 0
	},
	{											//* H
		0b10011001,    							//*   1 0 0 1
		0b10011111,    							//*   1 0 0 1
		0b1001,    	   							//*   1 1 1 1
				   								//*   1 0 0 1
	    		   								//*   1 0 0 1
	},
	{											//* I
		0b01100110,    							//*   0 1 1 0
		0b01100110,    							//*   0 1 1 0
		0b0110,    	   							//*   0 1 1 0
				   								//*   0 1 1 0
	    		   								//*   0 1 1 0
	},
	{											//* J
		0b01000100,    							//*   0 0 1 0
		0b01010100,    							//*   0 0 1 0
		0b0111,    	   							//*   0 0 1 0
				   								//*   1 0 1 0
	    		   								//*   1 1 1 0
	},
	{											//* K
		0b01011001,    							//*   1 0 0 1
		0b01010011,    							//*   1 0 1 0
		0b1001,    	   							//*   1 1 0 0
				   								//*   1 0 1 0
	    		   								//*   1 0 0 1
	},
	{											//* L
		0b00010001,    							//*   1 0 0 0
		0b01010001,    							//*   1 0 0 0
		0b0111,    	   							//*   1 0 0 0
				   								//*   1 0 1 0
	    		   								//*   1 1 1 0
	},
	{											//* M
		0b11111001,    							//*   1 0 0 1
		0b10011001,    							//*   1 1 1 1
		0b1001,    	   							//*   1 0 0 1
				   								//*   1 0 0 1
	    		   								//*   1 0 0 1
	},
	{											//* N
		0b10111001,    							//*   1 0 0 1
		0b11011001,    							//*   1 1 0 1
		0b1001,    	   							//*   1 0 0 1
				   								//*   1 0 1 1
	    		   								//*   1 0 0 1
	},
	{											//* O
		0b10010110,    							//*   0 1 1 0
		0b10011001,    							//*   1 0 0 1
		0b0110,    	   							//*   1 0 0 1
				   								//*   1 0 0 1
	    		   								//*   0 1 1 0
	},
	{											//* R
		0b10010111,    							//*   1 1 1 0
		0b01010111,    							//*   1 0 0 1
		0b1001,    	   							//*   1 1 1 0
				   								//*   1 0 1 0
	    		   								//*   1 0 0 1
	},
	{											//* S
		0b00011111,    							//*   1 1 1 1
		0b10000110,    							//*   1 0 0 0
		0b0111,    	   							//*   0 1 1 0
				   								//*   0 0 0 1
	    		   								//*   1 1 1 0
	},
	{											//* T
		0b01101111,    							//*   1 1 1 1
		0b01100110,    							//*   0 1 1 0
		0b0110,    	   							//*   0 1 1 0
				   								//*   0 1 1 0
	    		   								//*   0 1 1 0
	},
	{											//* U
		0b10011001,    							//*   1 0 0 1
		0b10011001,    							//*   1 0 0 1
		0b0110,    	   							//*   1 0 0 1
				   								//*   1 0 0 1
	    		   								//*   0 1 1 0
	},
	{											//* V
		0b10011001,    							//*   1 0 0 1
		0b11001010,    							//*   1 0 0 1
		0b0100,    	   							//*   0 1 0 1
				   								//*   0 0 1 1
	    		   								//*   0 0 1 0
	},
	{											//* W
		0b10111001,    							//*   1 0 0 1
		0b10111101,    							//*   1 1 0 1
		0b0110,    	   							//*   1 0 1 1
				   								//*   1 1 0 1
	    		   								//*   0 1 1 0
	},
	{											//* X
		0b10101001,    							//*   1 0 0 1
		0b10100100,    							//*   0 1 0 1
		0b1001,    	   							//*   0 0 1 0
				   								//*   0 1 0 1
	    		   								//*   1 0 0 1
	},
	{											//* Y
		0b10101001,    							//*   1 0 0 1
		0b01000100,    							//*   0 1 0 1
		0b0100,    	   							//*   0 0 1 0
				   								//*   0 0 1 0
	    		   								//*   0 0 1 0
	},
	{											//* Z
		0b00011111,    							//*   1 1 1 1
		0b00100100,    							//*   0 0 0 1
		0b1111,    	   							//*   0 0 1 0
				   								//*   0 1 0 0
	    		   								//*   1 1 1 1
	},
};
//A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z.